---
# tasks file for wol

- name: Ensure the required packages are install on our wol client(s)
  package:
    name: "{{ wol_client_packages }}"
    state: present
  register: wol_client_packages_installed
  until: wol_client_packages_installed is succeeded
  retries: 3

- name: grab the value for ansible_host to that our delegate_to stuff works
  set_fact: wol_target_host="{{ ansible_host }}"

- name: debug targeted host name
  debug: var={{ wol_target_host }}

- name: Create our host_vars directory for this host
  become: false
  delegate_to: localhost
  file:
    path: "{{ inventory_dir }}/dynamic/host_vars/{{ wol_target_host }}/wol/active"
    state: directory
    mode: '0770'

- name: Template our mactive interfaces mac address
  become: false
  delegate_to: localhost
  template:
    src: active-mac.j2
    dest: "{{ inventory_dir }}/dynamic/host_vars/{{ wol_target_host }}/wol/active/mac"
    mode: '0770'
    force: yes

- name: WOL | Check if wol options have been set previously
  shell: >
    ethtool {{ ansible_default_ipv4.interface }} | grep 'Wake-on' | tail -1 | awk '{print substr($0,length,1)}'
  register: wol_previous_options

- name: WOL | Current status is
  debug:
    msg: "Current status is: {{ wol_previous_options.stdout }}"

- name: WOL | Set new options it they are not the same as the current options
  shell: >
    ethtool -s {{ ansible_default_ipv4.interface }} wol {{ wol_options }}
  when: "wol_options != wol_previous_options.stdout"

- name: WOL | Print message on how to wake up this system
  become: false
  delegate_to: localhost
  debug:
    msg: "Use 'wakeonlan {{ lookup('file', '{{ inventory_dir }}/dynamic/host_vars/{{ wol_target_host }}/wol/active/mac') }}'"
