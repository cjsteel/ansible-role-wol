---
# tasks file for wol

- name: Ensure the required packages are install on our wol client(s)
  package:
    name: "{{ wol_client_packages }}"
    state: present
  register: wol_client_packages_installed
  until: wol_client_packages_installed is succeeded
  retries: 3

- name: conserve value ansible_host for delegate_to tasks 
  set_fact: wol_target_host="{{ ansible_host }}"

- name: Remove any stale mac address entries in "{{ inventory_dir }}/host_vars/{{ wol_target_host }}/wol"
  become: false
  delegate_to: localhost
  file:
    path: "{{ inventory_dir }}/host_vars/{{ wol_target_host }}/wol"
    state: absent

- name: Create our host_vars directory for this host
  become: false
  delegate_to: localhost
  file:
    path: "{{ inventory_dir }}/host_vars/{{ wol_target_host }}/wakeonlan/{{ ansible_default_ipv4.interface }}"
    state: directory
    mode: '0750'

- name: Template the mac address of our active interface
  become: false
  delegate_to: localhost
  template:
    src: active-mac.j2
    dest: "{{ inventory_dir }}/host_vars/{{ wol_target_host }}/wakeonlan/{{ ansible_default_ipv4.interface }}/mac"
    mode: '0770'
    force: yes

- name: Check if wol options have been set previously
  shell: >
    ethtool {{ ansible_default_ipv4.interface }} | grep 'Wake-on' | tail -1 | awk '{print substr($0,length,1)}'
  register: wol_previous_options

- name: Current wol options on our active interface are
  debug:
    msg: "Current WOL options: {{ wol_previous_options.stdout }}"

- name: If the current options are not the same as new options up date the options
  shell: >
    ethtool -s {{ ansible_default_ipv4.interface }} wol {{ wol_options }}
  when: "wol_options != wol_previous_options.stdout"

# needs loop, perhaps just drop as not required
#
#- name: Set the value of our active nic mac address
#  set_fact:
#    fact_active_nic_mac="{{ lookup('file', '{{ inventory_dir }}/host_vars/{{ wol_target_host }}/wol/{{ ansible_default_ipv4.interface }}/mac') }}'"

#- name: Print message on how to wake up this system
#  become: false
#  delegate_to: localhost
#  debug:
#    msg: "Use 'wakeonlan {{ wol_mac_address }}'"
